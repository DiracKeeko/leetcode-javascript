
树
树是一种非线性的数据结构，以分层的方式存储数据。树的问题非常适合用递归来解决，因为树的结构本身就是递归定义的。
用递归解决树的问题，关键是把问题拆成可重复解决的子问题，最后找到子问题的终点(return 条件)。

二叉树
104. 二叉树的最大深度
226. 翻转二叉树


回溯思想
0017电话号码的字母组合
0039组合总和
0051N 皇后  hard
0037解数独  hard
0077组合
0078子集
0131分割回文串
0093复原IP地址
0047全排列II
0090子集II
0040组合总和II  (使用used数组, 树层去重 https://www.bilibili.com/video/BV12V4y1V73A)


贪心算法 (通过局部最优解得到全局最优解，贪心无套路，没有固定的方法)
0455分发饼干
0053最大子数组和 (carl说这个题也可以用动态规划来解)】
0122买卖股票的最佳时机II
0055跳跃游戏
0045跳跃游戏II
1005K次取反后最大化的数组和  (我的思路很妙)
0860柠檬水找零
0406根据身高重建队列
0452用最少数量的箭引爆气球
0435无重叠区间 (与0452很像)
0763划分字母区间
0056合并区间 (与0452 0435题很像) 写的题解效率不高，应该会有更高效的写法
0738单调递增的数字
0621任务调度器
0649Dota2参议院 (要学习一下这个题双队列的思路)
0968监控二叉树 hard

0134加油站 (晦涩，很不好想 强行归类到贪心)
0135分发糖果 hard (没见过根本做不出来 强行归类到贪心)

0376摆动序列 (不太像贪心 https://blog.csdn.net/rangbiubiu/article/details/133846588)


动态规划 (动态规划中dp[j]是由上一阶段的状态推导得到，而贪心算法不需要)

dp五步
1. 确定dp数组（dp table）以及下标的含义
2. 确定递推公式
3. dp数组如何初始化
4. 确定遍历顺序
5. 举例推导dp数组

0509斐波那契数
0070爬楼梯
0746使用最小花费爬楼梯
0062不同路径
0063不同路径II
0343整数拆分
0096不同的二叉搜索树
kc0046携带研究材料(01背包)  (二维dp实现, 滚动数组实现)
0416分割等和子集 (转化为背包的重点是 nums = weight = value)
1049最后一块石头的重量II
0494目标和 (背包 组合)  1.最基础的二维数组方法 https://www.bilibili.com/video/BV1g34y1u7Eu
0474一和零